# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master", "0.1.x", "0.2.x"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set base path
        shell: bash
        run: |
          branch="${GITHUB_REF##*/}"
          if [ "${branch}"="master" ]; then 
            base_path="."
          else
            base_path="${branch}"
          fi
          echo "BASE_PATH=${base_path}" >> $GITHUB_ENV
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Setup Page Builder
        run: |
          python -m pip install --upgrade pip
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install --with docs
      - name: Build Docs
        run: |
          poetry run sphinx-build doc_src docs/${{ env.BASE_PATH }}
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
