# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on: 
  workflow_dispatch:
  
  release:
    types: [prerelease, published]



permissions:
  contents: read

jobs:
  checkRelease:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        curl -sSL https://install.python-poetry.org | python3 -
        poetry install
    - name: check tag and release version match
      shell: bash
      run: |
        POETRY_VERSION=$(poetry version --short)
        echo "$POETRY_VERSION"
        echo "$GITHUB_REF"
        if ["$GITHUB_REF" != "refs/tags/$POETRY_VERSION"] then 
          set -eo pipefail 
        fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        poetry run pytest

  deploy:
    needs: checkRelease
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        curl -sSL https://install.python-poetry.org | python3 -
        poetry install
    - name: Build package
      run: poetry build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    - name: tag commit
      run: |
        VERSION = "${poetry version --short}"
        git tag "v${VERSION}"
        
